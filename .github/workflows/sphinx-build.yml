name: Sphinx build docs on push
on:
-   push

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y libcurl4-openssl-dev pandoc tidy
        -   name: Check out main
            uses: actions/checkout@main
        -   name: Setup Python
            uses: actions/setup-python@v4
            with:
                python-version: "3.10"
        -   name: Load cached Poetry installation
            uses: actions/cache@v2
            with:
                path: ~/.local
                key: poetry-0
        -   name: Install Poetry
            uses: snok/install-poetry@v1
            with:
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true
                installer.modern-installation: false
        -   uses: snok/install.poetry@v1
            run: poetry config installer.modern-installation false
        -   name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        -   name: Install dependencies
            if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            run: poetry install --no-interaction --no-root
        -   name: Install library
            run: poetry install --no-interaction --with dev
        -   name: Build documentation
            run: poetry run make html --directory docs/
        -   name: Clean HTML files
            continue-on-error: true
            run: |
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/notebooks/manual.html
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/index.html
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/webservice.html
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/releasehistory.html
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/contents.html
                tidy -i -m -w 120 -utf8 -ashtml docs/_build/html/reference.html
        -   name: Commit files
            run: |
                git config --local user.email "action@github.com"
                git config --local user.name "GitHub Action"
                touch docs/_build/html/.nojekyll
                echo 'pypath.omnipathdb.org' > docs/_build/html/CNAME
                git add -f docs/_build/
                git commit -m "Update autodoc" -a
    # using https://github.com/marketplace/actions/push-git-subdirectory-as-branch
        -   name: Deploy
            uses: s0/git-publish-subdir-action@develop
            env:
                REPO: self
                BRANCH: gh-pages
                FOLDER: docs/_build/html
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

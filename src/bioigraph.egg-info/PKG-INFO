Metadata-Version: 1.1
Name: bioigraph
Version: 0.1.43
Summary: Work with molecular networks in Python igraph
Home-page: ['http://157.181.231.40/~denes/bioigraph']
Author: Dénes Türei
Author-email: denes@ebi.ac.uk
License: LGPL
Download-URL: ['http://157.181.231.40/~denes/bioigraph']
Description: Bioigraph
        #########
        
        
        :note: Bioigraph supported only in Python 2.7, and no version 3.x is available currently.
        
        :contributions: denes@ebi.ac.uk
        :issues: https://github.com/seazlab/bioigraph/issues
        
        **Bioigraph** is a Python package built around igraphthat to work with molecular network representations e.g. PPI, miRNA, drug compound interaction networks.
        
        Installation
        ============
        
        igraph C library
        ----------------
        
        Python igraph is a Python interface to use the igraph C library. The C library should be installed. 
        
        Mac OS X
        --------
        
        On OS X installation of cairo and the igraph C core is not straightforward. It is advised to follow the **mac_install.sh** script. To know more see the description in the script header.
        
        Directly from git
        -----------------
        
        .. code:: bash
            
            pip2 install git+https://github.com/saezlab/bioigraph.git
        
        With pip
        --------
        
        Download the package from /dist, and install with pip:
        
        .. code:: bash
            
            pip2 install bioigraph-x.y.z.tar.gz
        
        Build source distribution
        -------------------------
        
        Clone the git repo, and run setup.py:
        
        .. code:: bash
            
            python2 setup.py sdist
        
        Features
        ========
        
        The primary aim of **Bioigraph** is to build up networks from multiple sources on one igraph object. **Bioigraph** handles ambiguous ID conversion, reads custom edge and node attributes from text files and **MySQL**.
        
        Submodules perform various features, e.g. graph visualization, working with drug compound data, searching drug targets and compounds in **ChEMBL**. 
        
        ID conversion
        -------------
        
        The ID conversion module ``mapping`` can be used independently. It has the feature to translate secondary UniProt IDs to primaries, and Trembl IDs to SwissProt, using primary Gene Symbols to find the connections. This module automatically loads and stores the necessary conversion tables. Many tables are predefined, such as all the IDs in **UniProt mapping service,** while users are able to load any table from **file** or **MySQL,** using the classes provided in the module ``input_formats``.
        
        Pathways
        --------
        
        **Bioigraph** includes data and predefined format descriptions for more than 25  high quality, literature curated databases. The inut formats are defined in the ``data_formats`` module. For some resources data downloaded on the fly, where it is not possible, data is redistributed with the module. Descriptions and comprehensive information about the resources is available in the ``descriptions`` module. 
        
        Structural features
        -------------------
        
        One of the modules called ``intera`` provides many classes for representing structures and mechanisms behind protein interactions. These are ``Residue`` (optionally mutated), ``Motif``, ``Ptm``, ``Domain``, ``DomainMotif``, ``DomainDomain`` and ``Interface``. All these classes have ``__eq__()`` methods to test equality between instances, and also ``__contains__()`` methods to look up easily if a residue is within a short motif or protein domain, or is the target residue of a PTM.
        
        Sequences
        ---------
        
        The module ``seq`` contains a simple class for quick lookup any residue or segment in **UniProt** protein sequences while being aware of isoforms.
        
        Tissue expression
        -----------------
        
        For 3 protein expression databases there are functions and modules for downloading and combining the expression data with the network. These are the Human Protein Atlas, the ProteomicsDB and GIANT. The ``giant`` and ``proteomicsdb`` modules can be used also as stand alone Python clients for these resources.
        
        Functional annotations
        ----------------------
        
        **GSEA** and **Gene Ontology** are two approaches for annotating genes and gene products, and enrichment analysis technics aims to use these annotations to highlight the biological functions a given set of genes is related to. Here the ``enrich`` module gives abstract classes to calculate enrichment statistics, while the ``go`` and the ``gsea`` modules give access to GO and GSEA data, and make it easy to count enrichment statistics for sets of genes.
        
        Drug compounds
        --------------
        
        **UniChem** submodule provides an interface to effectively query the UniChem service, use connectivity search with custom settings, and translate SMILEs to ChEMBL IDs with ChEMBL web service.
        
        **ChEMBL** submodule queries directly your own ChEMBL MySQL instance, has the features to search targets and compounds from custom assay types and relationship types, to get activity values, binding domains, and action types. You need to download the ChEMBL MySQL dump, and load into your own server.
        
        Technical
        ---------
        
        **MySQL** submodule helps to manage MySQL connections and track queries. It is able to run queries parallely to optimize CPU and memory usage on the server, handling queues, and serve the result by server side or client side storage. The ``chembl`` and potentially the ``mapping`` modules rely on this ``mysql`` module.
        
        The most important function in module ``dataio`` is a very flexible **download manager** built around ``curl``. The function ``dataio.curl()`` accepts numerous arguments, tries to deal in a smart way with local **cache,** authentication, redirects, uncompression, character encodings, FTP and HTTP transactions, and many other stuff. Cache can grow to several GBs, and takes place in ``./cache`` by default. Please be aware of this, and use for example symlinks in case of using multiple working directories.
        
        A simple **webservice** comes with this module: the ``server`` module based on ``twisted.web.server`` opens a custom port and serves plain text tables over HTTP with REST style querying.
        
        
        Release History
        ------------------
        This is a summary of the changelog. 
        
        0.1.0: 
        +++++++++++ 
        * First release of Bioigraph, for testing.
Keywords: graph,network,protein,mRNA,DNA,signaling,SignaLink,Signor,InnateDB,IntAct,Reactome,MPPI,NCI-PID,DIP,MatrixDB,PANTHER,PhosphoSite,PhosphoPoint,DEPOD,SPIKE,KEGG,Autophagy,ARN,NRF2,NRF2ome,Guide to Pharmacology,regulation,phosphorylation,kinase,phosphatase,dephosphorylation,directed graph
Platform: Linux
Platform: Unix
Platform: MacOSX
Platform: Windows
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: GNU Library or Lesser General Public License (LGPL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
